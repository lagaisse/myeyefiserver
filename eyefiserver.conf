# This is the configuration file for eyefiserver. See eyefiserver.conf(5).

[EyeFiServer]

# To use eyefiserver, you need to modify this file and write your Eye-Fi upload
# key where all the zero are bellow. And remove the leading # of course.
# You can find your upload key after configuring the card, which you can
# currently on do only on windows or mac :(
# Windows: See C:\Documents and Settings\<User>\Application Data\Eye-Fi\Settings.xml
# Mac: See ~/Applications Data/Eye-Fi/Settings.xml
# If you have multiple cards, RTFM.
#
upload_key=XXXXXXXXXXXXXXXXXXXXX


# How many details do you want about operations?
# Possible values are 'DEBUG', 'INFO', 'WARNING', 'ERROR' and 'FATAL'

loglevel=DEBUG


# You can specific where the files are downloaded.
# the name of the directory can be a python strftime formatted string like 
# /home/myblog/pictures/%Y-%m-%d
# See http://docs.python.org/library/time.html#time.strftime
#
# daemon user need write access.

upload_dir=/XXXXXXXXXX/mesScans/%Y/%Y%m%d


# Do we use the date of the transfer or the date of the file in the camera?
# default is to use the date of the transfer

use_date_from_file=no


# This parameter executes the specified command on each incoming file passing in
# the full file path as the first argument.
# By nature this command is dangerous and should be used carefully: Enabling it
# can serve as a means of compromising a system or disclosing information via
# bugs in external programs or scripts.
# To display files as they arrive on Windows:
#complete_execute=C:\Windows\system32\mspaint.exe
# To display files as they arrive on Linux: Requires X server access, ie run as
# a normal user.
complete_execute=sh /XXXXXXXXXXX/notify.sh


# This parameter executes the specified command every few seconds while file is
# beeing received.
# $1: the full file path of the temporary TAR file
# $2: final tar size in bytes
# $3: speed in bps
# By nature this command is dangerous and should be used carefully: Enabling it
# can serve as a means of compromising a system or disclosing information via
# bugs in external programs or scripts.
#progress_execute=
